@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant "f:FilterBuilder" as FilterBuilder LOGIC_COLOR
participant "u:FilterCommand" as FilterCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant ":VersionedAddressBook" as VersionedAddressBook MODEL_COLOR
end box
[-> LogicManager : execute(filter)
activate LogicManager

LogicManager -> AddressBookParser : parseCommand(filter)
activate AddressBookParser

create FilterBuilder
AddressBookParser -> FilterBuilder
activate FilterBuilder

FilterBuilder --> AddressBookParser :f
deactivate FilterBuilder

opt language type is given for filter

AddressBookParser -> FilterBuilder : setLanguageType()
activate FilterBuilder

end

FilterBuilder --> AddressBookParser :
deactivate FilterBuilder

opt index list is given for filter

    AddressBookParser -> FilterBuilder : setIndexFilter()
    activate FilterBuilder
end

FilterBuilder --> AddressBookParser :
deactivate FilterBuilder


create FilterCommand
AddressBookParser -> FilterCommand : FilterCommand(f)
activate FilterCommand

FilterCommand --> AddressBookParser : u

AddressBookParser --> LogicManager : u
deactivate AddressBookParser

LogicManager -> FilterCommand : execute()
activate FilterCommand

FilterCommand -> FilterBuilder : buiLd()
activate FilterBuilder

FilterBuilder --> FilterCommand : filterPredicate
deactivate FilterBuilder

FilterCommand -> Model : filterAddressBook()
activate Model

Model -> VersionedAddressBook : filter()
activate VersionedAddressBook

VersionedAddressBook -> VersionedAddressBook :resetData(ReadOnlyAddressBook)
VersionedAddressBook --> Model :
deactivate VersionedAddressBook

Model --> FilterCommand
deactivate Model

FilterCommand --> LogicManager : result
deactivate FilterCommand
FilterCommand -[hidden]-> LogicManager : result
destroy FilterCommand

[<--LogicManager
deactivate LogicManager
@enduml
